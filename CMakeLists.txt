cmake_minimum_required( VERSION 3.10 )

find_package( brainvisa-cmake )
if( brainvisa-cmake_FOUND )
  set( brainvisa_enabled "1" )
  BRAINVISA_PROJECT()
else()

  set( brainvisa_enabled "" )
  set( PROJECT_NAME burps )
  set( burps_VERSION 0.3 )
  set( CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin" )
  if ( NOT DEFINED WIN32 )
    set( CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib" )
  else()
    set( CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin" )
  endif()
endif()

if( NOT DESIRED_QT_VERSION )
  find_package( Qt REQUIRED )
endif()
if( DESIRED_QT_VERSION EQUAL 4 )
  find_package( Qt4 COMPONENTS QtCore QtGui REQUIRED )
elseif( DESIRED_QT_VERSION EQUAL 5 )
  find_package( Qt5Core )
  find_package( Qt5Widgets )
  find_package( Qt5LinguistTools )
  add_definitions(${Qt5Widgets_DEFINITIONS})
  include_directories(${Qt5Widgets_INCLUDE_DIRS})
  set( QT_LIBRARIES ${Qt5Widgets_LIBRARIES} )
endif()
find_package( QtVersion )
find_package( Qwt REQUIRED )

set( BURPS_DEFINITIONS "-DBURPS_EXPORTS" )

set( BURPS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/include )
include_directories( "${BURPS_INCLUDE_DIR}" "${QWT_INCLUDE_DIR}" )
add_definitions( ${BURPS_DEFINITIONS} )

if( DESIRED_QT_VERSION EQUAL 4 )
  include( "${QT_USE_FILE}" )
  set( BURPS_LIBRARIES ${QT_QTGUI_LIBRARY} ${QT_QTCORE_LIBRARY} )
elseif( DESIRED_QT_VERSION EQUAL 5 )
  set( BURPS_LIBRARIES ${QT_LIBRARIES} )
endif()

set( BURPS_LIBRARIES ${BURPS_LIBRARIES} ${QWT_LIBRARY} )
# set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpic")

add_subdirectory( src )
# add_subdirectory( doxygen )

